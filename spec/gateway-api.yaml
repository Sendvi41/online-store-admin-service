openapi: 3.0.2
info:
  title: gateway-api
  version: "1.0.0"
  description: 'gateway-api'
tags:
  - name: admin-service
    description: Access to functionality of admin
  - name: customer-service
    description: Access to functionality of customer
paths:
  /products:
    get:
      tags:
        - admin-service
      summary: Get all products
      description: Get all products
      responses:
        '200':
          description: Get list of products
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProductEntity'
    post:
      tags:
        - admin-service
      summary: Add a new product
      description: Add a new product
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ProductDto'
        required: true
      responses:
        '200':
          description: Product is added
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProductEntity'
        '400':
          description: Validation is failed
  /products/{id}:
    get:
      tags:
        - admin-service
      summary: Get product by id
      description: Get product by id
      parameters:
        - name: id
          in: path
          description: id of product
          required: true
          schema:
            type: long
      responses:
        '200':
          description: Get product
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProductEntity'
        '400':
          description: Invalid ID
        '404':
          description: Product is not found
    put:
      tags:
        - admin-service
      summary: Update product by id
      description: Update product by id
      parameters:
        - name: id
          in: path
          description: ID of product
          required: true
          schema:
            type: long
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ProductDto'
        required: true
      responses:
        '200':
          description: Product is updated
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProductEntity'
        '400':
          description: Validation is failed
        '404':
          description: Product is not found
    delete:
      tags:
        - admin-service
      summary: Delete product by id
      description: Delete product by id
      parameters:
        - name: id
          in: path
          description: ID of product
          required: true
          schema:
            type: long
      responses:
        '200':
          description: Product is deleted
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MessageDto'
        '400':
          description: Invalid ID
        '404':
          description: Product is not found
  /products/search/{criteria}:
    get:
      tags:
        - customer-service
      summary: Find all products by criteria
      description: Find all products by criteria
      parameters:
        - name: criteria
          in: path
          required: true
          schema:
            $ref: '#/components/schemas/Criteria'
      responses:
        '200':
          description: Get list of products
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProductEntity'
  /basket/{userId}:
    get:
      tags:
        - customer-service
      summary: Get all products of basket by userId
      description: Get all products of basket by userId
      parameters:
        - name: userId
          in: path
          description: ID of user
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: Get list of products of basket
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProductEntity'
        '400':
          description: Invalid ID
        '404':
          description: The user not found
  /basket/{userId}/{goodsId}:
    post:
      tags:
        - customer-service
      summary: Add product to basket
      description: Add product to basket
      parameters:
        - name: goodsId
          in: path
          description: ID of goods
          required: true
          schema:
            type: integer
        - name: userId
          in: path
          description: ID of user
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: The product is added to basket
        '400':
          description: Invalid ID
        '404':
          description: The product not found
    delete:
      tags:
        - customer-service
      summary: Delete product from basket
      description: Delete product from basket
      parameters:
        - name: goodsId
          in: path
          description: ID of goods
          required: true
          schema:
            type: integer
        - name: userId
          in: path
          description: ID of user
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: Goods is deleted
        '400':
          description: Invalid ID
        '404':
          description: Goods not found
  /order/{userId}:
    post:
      tags:
        - customer-service
      summary: Create order for user
      description: Create order for user
      parameters:
        - name: userId
          in: path
          description: ID of user
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: Order is created
        '400':
          description: Invalid ID
        '404':
          description: User not found
components:
  schemas:
    ProductEntity:
      properties:
        id:
          type: long
        name:
          type: string
        category:
          type: string
        amount:
          type: integer
        price:
          type: integer
        date:
          type: string
    ProductDto:
      properties:
        name:
          type: string
        category:
          type: string
        amount:
          type: integer
        price:
          type: integer
        date:
          type: string
    MessageDto:
      properties:
        name:
          type: string
    Criteria:
      properties:
        category:
          type: string
        mindate:
          type: string
        maxdate:
          type: string